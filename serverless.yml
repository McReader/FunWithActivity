# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: mcreader
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: fun-with-activity
# "service" is the name of this project. This will also be added to your AWS resource names.
service: FunWithActivity

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}

resources:
  Resources:
    ActivityStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:service}-${self:provider.stage}-activity-stream
        ShardCount: 1
        RetentionPeriodHours: 24

    ApiGatewayRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: apigateway.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: KinesisPutRecordPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - kinesis:PutRecord
                  Resource: !GetAtt ActivityStream.Arn

    ActivityApi:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: ${self:service}-${self:provider.stage}-activity-api
        ProtocolType: HTTP

    ActivityIntegration:
      Type: AWS::ApiGatewayV2::Integration
      Properties:
        ApiId: !Ref ActivityApi
        IntegrationType: AWS_PROXY
        IntegrationSubtype: Kinesis-PutRecord
        PayloadFormatVersion: '1.0'
        RequestParameters:
          StreamName: !Ref ActivityStream
          Data: $request.body
          PartitionKey: default
        CredentialsArn: !GetAtt ApiGatewayRole.Arn

    ActivityRoute:
      Type: AWS::ApiGatewayV2::Route
      Properties:
        ApiId: !Ref ActivityApi
        RouteKey: 'POST /activity'
        Target: !Join
          - /
          - - integrations
            - !Ref ActivityIntegration

    ApiStage:
      Type: AWS::ApiGatewayV2::Stage
      Properties:
        ApiId: !Ref ActivityApi
        StageName: ${self:provider.stage}
        AutoDeploy: true

outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Ref ActivityApi
